<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_shader" kind="class" language="C++" prot="public">
    <compoundname>Shader</compoundname>
    <includes refid="_shader_8h" local="no">Shader.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_shader_1a142a08b6fbdfc982d82ca10ee0b0f38d" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Shader::ID</definition>
        <argsstring></argsstring>
        <name>ID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="13" column="18" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_shader_1aa401fb323d4428aa1fd376168433f533" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Shader::vertexCode</definition>
        <argsstring></argsstring>
        <name>vertexCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="83" column="17" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_shader_1ada4814ac8d773263fb2b5472a851916e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Shader::fragmentCode</definition>
        <argsstring></argsstring>
        <name>fragmentCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="84" column="17" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_shader_1a00e5f8d836b7302e735347322d3f3a93" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Shader::libvertexCode</definition>
        <argsstring></argsstring>
        <name>libvertexCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="85" column="17" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_shader_1ad339d7d66fe980bc2465205fe55f3d1c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Shader::libfragmentCode</definition>
        <argsstring></argsstring>
        <name>libfragmentCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="86" column="17" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_shader_1ab22a1ada6b4c575515cb4bef557afb01" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Shader::use_lib</definition>
        <argsstring></argsstring>
        <name>use_lib</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="88" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_shader_1ab5a7afa720f49ebdbfe93e44c9d826a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Shader::Shader</definition>
        <argsstring>(const char *vertexPath=&quot;resources/shaders/object/objectDefaultLit.vs&quot;, const char *fragmentPath=&quot;resources/shaders/object/objectDefaultLit.fs&quot;, bool _uselib=true)</argsstring>
        <name>Shader</name>
        <param>
          <type>const char *</type>
          <declname>vertexPath</declname>
          <defval>&quot;resources/shaders/object/objectDefaultLit.vs&quot;</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>fragmentPath</declname>
          <defval>&quot;resources/shaders/object/objectDefaultLit.fs&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>_uselib</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="15" column="5" bodyfile="SOGLVA/src/Components/Graphics/Shader.cpp" bodystart="3" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1a5643468413e4031f279576759e854a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::setPath</definition>
        <argsstring>(const char *vertexPath, const char *fragmentPath)</argsstring>
        <name>setPath</name>
        <param>
          <type>const char *</type>
          <declname>vertexPath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fragmentPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="17" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.cpp" bodystart="12" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1a5be69e48ac2436651ead777bf5fb5c9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::compile</definition>
        <argsstring>()</argsstring>
        <name>compile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="19" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.cpp" bodystart="55" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1a870fa9f13d69e558815d6fd351a469dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::use</definition>
        <argsstring>()</argsstring>
        <name>use</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="21" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1ab1a56d6c299bd7eaa18c2e142ef7bd9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::setBool</definition>
        <argsstring>(const std::string &amp;name, bool value) const</argsstring>
        <name>setBool</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="25" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1ad362e2b654cd95a3574cd505411e41fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::setInt</definition>
        <argsstring>(const std::string &amp;name, int value) const</argsstring>
        <name>setInt</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="30" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1afe7367621f74c2d26431d8ac15252bf3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::setFloat</definition>
        <argsstring>(const std::string &amp;name, float value) const</argsstring>
        <name>setFloat</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="35" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1afd4d41322a1cdd1d5155bf124d19debf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::setVec2</definition>
        <argsstring>(const std::string &amp;name, const glm::vec2 &amp;value) const</argsstring>
        <name>setVec2</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const glm::vec2 &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="40" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1afb91bc9e954bf590857c96ab1331b0ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::setVec2</definition>
        <argsstring>(const std::string &amp;name, float x, float y) const</argsstring>
        <name>setVec2</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="44" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1aeb021061c5d451329d92257b07dbfec3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::setVec3</definition>
        <argsstring>(const std::string &amp;name, const glm::vec3 &amp;value) const</argsstring>
        <name>setVec3</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="49" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1a90092c25b7dc23964c465b93887300f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::setVec3</definition>
        <argsstring>(const std::string &amp;name, float x, float y, float z) const</argsstring>
        <name>setVec3</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="53" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1a79cbe674f6bf1a576a48045dcb924de5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::setVec4</definition>
        <argsstring>(const std::string &amp;name, const glm::vec4 &amp;value) const</argsstring>
        <name>setVec4</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const glm::vec4 &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="58" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1a913e10fe2501b00746ae6901b97a1730" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::setVec4</definition>
        <argsstring>(const std::string &amp;name, float x, float y, float z, float w)</argsstring>
        <name>setVec4</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <param>
          <type>float</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="62" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1a91a6ee79b959cacd618c9e29a5bbd732" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::setMat2</definition>
        <argsstring>(const std::string &amp;name, const glm::mat2 &amp;mat) const</argsstring>
        <name>setMat2</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const glm::mat2 &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="67" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1a3e24fcad187493dfebaa12939072e91d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::setMat3</definition>
        <argsstring>(const std::string &amp;name, const glm::mat3 &amp;mat) const</argsstring>
        <name>setMat3</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const glm::mat3 &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="72" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_shader_1a8e711c96f3e1722cbfb88fde9478977c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::setMat4</definition>
        <argsstring>(const std::string &amp;name, const glm::mat4 &amp;mat) const</argsstring>
        <name>setMat4</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const glm::mat4 &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="77" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="77" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_shader_1a995a004aa89493d6737be8f2b190faa7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Shader::checkCompileErrors</definition>
        <argsstring>(unsigned int shader, std::string type)</argsstring>
        <name>checkCompileErrors</name>
        <param>
          <type>unsigned int</type>
          <declname>shader</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SOGLVA/src/Components/Graphics/Shader.h" line="87" column="10" bodyfile="SOGLVA/src/Components/Graphics/Shader.cpp" bodystart="88" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="SOGLVA/src/Components/Graphics/Shader.h" line="9" column="1" bodyfile="SOGLVA/src/Components/Graphics/Shader.h" bodystart="10" bodyend="89"/>
    <listofallmembers>
      <member refid="class_shader_1a995a004aa89493d6737be8f2b190faa7" prot="private" virt="non-virtual"><scope>Shader</scope><name>checkCompileErrors</name></member>
      <member refid="class_shader_1a5be69e48ac2436651ead777bf5fb5c9f" prot="public" virt="non-virtual"><scope>Shader</scope><name>compile</name></member>
      <member refid="class_shader_1ada4814ac8d773263fb2b5472a851916e" prot="private" virt="non-virtual"><scope>Shader</scope><name>fragmentCode</name></member>
      <member refid="class_shader_1a142a08b6fbdfc982d82ca10ee0b0f38d" prot="public" virt="non-virtual"><scope>Shader</scope><name>ID</name></member>
      <member refid="class_shader_1ad339d7d66fe980bc2465205fe55f3d1c" prot="private" virt="non-virtual"><scope>Shader</scope><name>libfragmentCode</name></member>
      <member refid="class_shader_1a00e5f8d836b7302e735347322d3f3a93" prot="private" virt="non-virtual"><scope>Shader</scope><name>libvertexCode</name></member>
      <member refid="class_shader_1ab1a56d6c299bd7eaa18c2e142ef7bd9f" prot="public" virt="non-virtual"><scope>Shader</scope><name>setBool</name></member>
      <member refid="class_shader_1afe7367621f74c2d26431d8ac15252bf3" prot="public" virt="non-virtual"><scope>Shader</scope><name>setFloat</name></member>
      <member refid="class_shader_1ad362e2b654cd95a3574cd505411e41fd" prot="public" virt="non-virtual"><scope>Shader</scope><name>setInt</name></member>
      <member refid="class_shader_1a91a6ee79b959cacd618c9e29a5bbd732" prot="public" virt="non-virtual"><scope>Shader</scope><name>setMat2</name></member>
      <member refid="class_shader_1a3e24fcad187493dfebaa12939072e91d" prot="public" virt="non-virtual"><scope>Shader</scope><name>setMat3</name></member>
      <member refid="class_shader_1a8e711c96f3e1722cbfb88fde9478977c" prot="public" virt="non-virtual"><scope>Shader</scope><name>setMat4</name></member>
      <member refid="class_shader_1a5643468413e4031f279576759e854a1b" prot="public" virt="non-virtual"><scope>Shader</scope><name>setPath</name></member>
      <member refid="class_shader_1afd4d41322a1cdd1d5155bf124d19debf" prot="public" virt="non-virtual"><scope>Shader</scope><name>setVec2</name></member>
      <member refid="class_shader_1afb91bc9e954bf590857c96ab1331b0ec" prot="public" virt="non-virtual"><scope>Shader</scope><name>setVec2</name></member>
      <member refid="class_shader_1aeb021061c5d451329d92257b07dbfec3" prot="public" virt="non-virtual"><scope>Shader</scope><name>setVec3</name></member>
      <member refid="class_shader_1a90092c25b7dc23964c465b93887300f9" prot="public" virt="non-virtual"><scope>Shader</scope><name>setVec3</name></member>
      <member refid="class_shader_1a79cbe674f6bf1a576a48045dcb924de5" prot="public" virt="non-virtual"><scope>Shader</scope><name>setVec4</name></member>
      <member refid="class_shader_1a913e10fe2501b00746ae6901b97a1730" prot="public" virt="non-virtual"><scope>Shader</scope><name>setVec4</name></member>
      <member refid="class_shader_1ab5a7afa720f49ebdbfe93e44c9d826a8" prot="public" virt="non-virtual"><scope>Shader</scope><name>Shader</name></member>
      <member refid="class_shader_1a870fa9f13d69e558815d6fd351a469dc" prot="public" virt="non-virtual"><scope>Shader</scope><name>use</name></member>
      <member refid="class_shader_1ab22a1ada6b4c575515cb4bef557afb01" prot="private" virt="non-virtual"><scope>Shader</scope><name>use_lib</name></member>
      <member refid="class_shader_1aa401fb323d4428aa1fd376168433f533" prot="private" virt="non-virtual"><scope>Shader</scope><name>vertexCode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
